// Generated by CoffeeScript 1.6.3
(function() {
  var Car, Order, auth, myCar, myOrder, navInterval, socket, updateLocation, work, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  myCar = null;

  myOrder = null;

  navInterval = null;

  socket = io.connect('http://localhost:3000');

  Order = (function(_super) {
    __extends(Order, _super);

    function Order() {
      _ref = Order.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Order.prototype.idAttribute = '_id';

    Order.prototype.url = function() {
      if (this.isNew()) {
        return '/api/orders';
      } else {
        return '/api/orders/' + this.id;
      }
    };

    return Order;

  })(Backbone.Model);

  Car = (function(_super) {
    __extends(Car, _super);

    function Car() {
      _ref1 = Car.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    Car.prototype.idAttribute = '_id';

    Car.prototype.url = function() {
      if (this.isNew()) {
        return '/api/cars/auth';
      } else {
        return '/api/cars/' + this.id;
      }
    };

    Car.prototype.parse = function(data) {
      return data.result;
    };

    return Car;

  })(Backbone.Model);

  auth = $('#auth');

  work = $('#work');

  window.location.href = '#';

  updateLocation = function() {
    return navigator.geolocation.getCurrentPosition(function(position) {
      var latitude, longitude;
      latitude = position.coords.latitude;
      longitude = position.coords.longitude;
      myCar.set('point', [latitude, longitude]);
      return myCar.save();
    });
  };

  auth.on('click', 'form a', function() {
    var car;
    car = new Car({
      driverName: auth.find('#login').val(),
      password: auth.find('#passwd').val()
    });
    car.save({}, {
      success: function(car) {
        myCar = car;
        return window.location.href = '#work';
      }
    });
    return false;
  });

  work.on('click', '.online', function() {
    var _this = this;
    if (window.navigator.geolocation != null) {
      console.log(myCar);
      myCar.set('status', 'ready');
      myCar.save;
      updateLocation();
      navInterval = setInterval(updateLocation, 30000);
      socket.on('order-update', function(data) {
        var info, order, sound;
        order = new Order(data);
        if (order.get('carId') === myCar.id && order.get('status') === 'assigned') {
          myOrder = order;
          sound = $('<audio src="i/s.mp3" autoplay></audio>');
          work.append(sound);
          _.delay(function() {
            return sound.remove();
          }, 1000);
          info = "" + (order.get('startPointTitle')) + " - " + (order.get('endPointTitle')) + ", " + (order.get('phone'));
          work.find('.order-info').text(info).show();
          work.find('.accept').show();
          return work.find('.decline').show();
        }
      });
      work.find('.offline').show();
      $(this).hide();
    } else {
      $('#no-geoapi').popup('open');
    }
    return false;
  });

  work.on('click', '.offline', function() {
    $(this).hide();
    if (navInterval != null) {
      clearInterval(navInterval);
    }
    socket.removeAllListeners('order-update');
    work.find('.online').show();
    work.find('.order-info').hide();
    work.find('.accept').hide();
    work.find('.decline').hide();
    work.find('.finish').hide();
    myCar.set('status', 'off');
    myCar.set('point', []);
    return myCar.save();
  });

  work.on('click', '.accept', function() {
    $(this).hide();
    work.find('.decline').hide();
    work.find('.finish').show();
    myCar.set('status', 'busy');
    myCar.save();
    myOrder.set('status', 'processing');
    return myOrder.save();
  });

  work.on('click', '.decline', function() {
    $(this).hide();
    work.find('.accept').hide();
    work.find('.finish').show();
    myCar.set('status', 'ready');
    myCar.save();
    myOrder.set('status', 'ready');
    return myOrder.save();
  });

  work.on('click', '.finish', function() {
    $(this).hide();
    work.find('.order-info').hide();
    myCar.set('status', 'ready');
    myCar.save();
    myOrder.set('status', 'completed');
    return myOrder.save();
  });

}).call(this);
